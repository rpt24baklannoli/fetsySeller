# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/fetsySeller
    docker:
      - image: circleci/node:14.8.0
        environment:
          PGHOST: 127.0.0.1
          PGUSER: jose
          NODE_ENV: test
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_DB: seller
          POSTGRES_PASSWORD: ""
          POSTGRES_USER: joselopez
    steps:
      - checkout
      # Download and cache dependencies
      - run: npm install
      - run:
          name: Install postgress client
          command: |
            sudo apt-get update
            sudo apt-get install postgresql-client
      - run: cat package.json
      # Wait for Postgres connection to open.
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: createdb `whoami`
      - run: npm run db:setup
      - run: npm run db:seed
      - run: npm test


# version: 2.0
# jobs:
#   build:
#     docker:
#       - image: cimg/node:14.8.0
#         auth:
#           username: mydockerhub-user
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference

#     # Service container image available at `host: localhost`

#       - image: circleci/postgres:9.6.2-alpine
#         auth:
#           username: mydockerhub-user
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
#         environment:
#           POSTGRES_USER: joselopez
#           POSTGRES_DB: seller

#     steps:
#       - checkout
#       - run:
#           name: install dockerize
#           command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
#           environment:
#             DOCKERIZE_VERSION: v0.3.0
#       - run: npm install
#       - run: dockerize -wait tcp://localhost:5432 -timeout 1m
#       - run: |
#           psql \
#           -d $TEST_DATABASE_URL \
#           -c "CREATE TABLE test (name char(25));"
#       - run: |
#           psql \
#           -d $TEST_DATABASE_URL \
#           -c "INSERT INTO test VALUES ('John'), ('Joanna'), ('Jennifer');"
#       - run: |
#           psql \
#           -d $TEST_DATABASE_URL \
#           -c "SELECT * from test"